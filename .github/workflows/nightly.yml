name: nightly

# on:
#   schedule:
#     - cron: "0 7 * * *"
on:
  push:
    branches:
      - master
      - main

env:
  UPLOAD_BUILD: false

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        examples:
          - "pico-hello"
          - "pico-apple-2"
          - "pico-pioasm-ws2812"
          - "pico-i2c-oled"
          - "pico-posix"
          - "pico-tft-st7789"
          - "UNISTD"
          - "HELLO"
          - "pico-ardiuno"
          - "pico-cmsis-dap"
          - "pico-usb-webserver"
          - "pico-wasm3-dino-game"
        os: [ubuntu-latest, windows-latest, macos-latest]
        package:
          - "release"
          - "latest"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install PIO
        if: matrix.package == 'release'
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/S03/releases/latest/download/S03.zip
          pio platform install https://github.com/OS-Q/P25/releases/latest/download/P25.zip

      - name: Install QIO
        if: matrix.package == 'latest'
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/S03/archive/master.zip
          qio platform install file://.

      - name: Build
        id: build
        if: success()
        run: |
          pio run -d examples/${{ matrix.examples }}
          echo "::set-output name=status::success"

      - name: Upload
        if: steps.build.outputs.status == 'success' && env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: build_upload_${{ matrix.examples }}
          path: examples/${{ matrix.examples }}

      # - name: notification
      #   if: github.repository == 'OS-Q/P25'
      #   uses: Qful/mqtt-action@master
      #   with:
      #     protocol: mqtt
      #     host: ${{secrets.MQTT_SERVER}}
      #     port: 1883
      #     username: ${{secrets.MQTT_USERNAME}}
      #     password: ${{secrets.MQTT_PASSWORD}}
      #     topic: ${{github.repository}}/${{github.workflow}}/${{ matrix.os }}/${{ matrix.package }}/${{ matrix.python }}/${{ matrix.examples }}
      #     message: ${{steps.build.outputs.status}}

  origin:
    strategy:
      fail-fast: false
      matrix:
        example:
          - "arduino/pico-hello"
          - "arduino/pico-apple-2"
          - "arduino/pico-pioasm-ws2812"
          - "arduino/pico-i2c-oled"
          - "arduino/pico-posix"
          - "arduino/pico-tft-st7789"
          - "HelloWorld/UNISTD"
          - "HelloWorld/HELLO"
          - "baremetal/pico-ardiuno"
          - "baremetal/pico-cmsis-dap"
          - "baremetal/pico-usb-webserver"
          - "baremetal/pico-wasm3-dino-game"
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: Wiz-IO/wizio-pico-examples
          token: ${{ secrets.OSQ_REPO_TOKEN }}
          path: PIO

      - name: Install dependencies
        working-directory: PIO
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio/archive/develop.zip
          pio platform install https://github.com/Wiz-IO/wizio-pico/archive/master.zip

      - name: Build examples
        working-directory: PIO
        run: |
          pio run -d ${{ matrix.example }}

      - name: Upload
        if: success() && env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: build_upload
          path: arduino
